// coresdev loader
// signature and key verification: enabled
console.log("coresdev loader - enabled");
console.log("[coresdevLoader/INFO] Using nicely formatted logs");
console.log("[coresdevLoader:version/INFO] running version coresdev loader 1.2.1A-beta2");
console.log("[coresdevLoader/INFO] coresdev loader ready");
console.log("[coresdevLoader/WARNING] Unsigned code execution is enabled");
console.log("[coresdevLoader:input/INFO] enter code URL or fingerprint >");
curl = prompt("enter code URL or fingerprint >");
console.log("[coresdevLoader:loader/WARNING] Unsigned code execution enabled! This code will NOT be verified before running.");
console.log("[coresdevLoader:loader/WARNING] Type YES in all caps to continue, type anything else to cancel.");
confirm = prompt("Type YES in all caps to continue, type anything else to cancel.");
if (confirm == "YES") {
  console.log("[coresdevLoader:loader/INFO] Continuing unsigned code execution");
} else {
  console.log("[coresdevLoader:loader/INFO] Execution canceled, triggering fatal exception");
  console.log(null.innerHTML.firstChild() / 0);
  console.log("[coresdevLoader:ExceptionHandler/FATAL] Cannot divide by zero");
  console.log("[coresdevLoader:ExceptionHandler/FATAL] firstChild() is not a member of object Object/null");
  console.log("[coresdevLoader:ExceptionHandler/FATAL] Cannot get proprety innerHTML of null");
  console.log("[coresdevLoader:ExceptionHandler/FATAL] AT: coresdevLoader");
  console.log("[coresdevLoader:ExceptionHandler/FATAL] Loader killed");
  console.log("[coresdevLoader:ExceptionHandler/FATAL] Re-paste the loader injection script to try again");
  return;
}
var unsignedExecution = document.createElement("script");
unsignedExecution.setAttribute("id", "unsignedCodeRunOnSite");
document.head.appendChild(unsignedExecution);
console.log("[coresdevLoader:injector/INFO] Added tag unsignedCodeRunOnSite with value 1");
var code = document.createElement("script");
code.setAttribute("id", "codeInjected");
code.setAttribute("src", curl);
document.head.appendChild(code);
console.log("[coresdevLoader:injector/INFO] Injected code");
